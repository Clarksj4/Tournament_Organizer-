h1. Developing the Website

h2. Docker
You will need docker to run the webserver as it is in a docker container. Note
that the initial install and setup of the docker image will require a lot of
shit to get downloaded. Be prepared to wait and don't try this at uni behind
some bullshit proxy.

* Install docker. You can do this in Windows - good luck to you sir!
* Get the config file. This might include passwords so is not included in git
(as that would go to github). You should get this from Higgins.
* docker-compose up -d
* You are done. To do it manually see below.

h3. Manual Installation
* Build the db servers:
** cd <to_dir>/player_database
** sudo docker build -t player_db .
** cd <to_dir>/tournament_database
** sudo docker build -t tournament_db .
* Build the webserver:
** cd <to_dir>/webserver
** sudo docker build -t webserver .
* Run these images to start the containers:
** sudo docker run --name=player_db -d -P player_db
** sudo docker run --name=tournament_db -d -P tournament_db
** sudo docker run --name=webserver -d -p 5000:5000 --link=player_db --link=tournament_db webserver

h2. Testing
Currently there is a smoketest and behat skeleton. They run when you fire up
docker-compose.
* You can run them again and see the output
* docker start -a tournamentorganiser_smoketest_1 # Or whatever the name of
your smoketest container is. You can find this out by running docker-compose ps
* docker start -a tournamentorganiser_behat_1

h2. Adding new files

If you want to add new files to the webserver you simply need to rebuild the
container (manually or using scripts/install). Note that only the src directory
gets mounted into the container. You can add other directories by altering the
Dockerfile (c.f. the ADD commands at the bottom.

h2. Connecting to the Player DB
The recommended way to connect to the db is to enter the webserver container
and then connect to the player_db container from there. Attach to the
webserver and run the command:
* sudo docker exec -i -t webserver /bin/bash
* psql-player_db # This has been aliased
